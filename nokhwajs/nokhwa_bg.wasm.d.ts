/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function requestPermissions(): number;
export function queryCameras(): number;
export function queryConstraints(): number;
export function __wbg_cameraconstraintsbuilder_free(a: number): void;
export function cameraconstraintsbuilder_new(): number;
export function cameraconstraintsbuilder_Resolution(a: number, b: number): number;
export function cameraconstraintsbuilder_MaxResolution(a: number, b: number): number;
export function cameraconstraintsbuilder_ResolutionExact(a: number, b: number): number;
export function cameraconstraintsbuilder_MinAspectRatio(a: number, b: number): number;
export function cameraconstraintsbuilder_AspectRatio(a: number, b: number): number;
export function cameraconstraintsbuilder_MaxAspectRatio(a: number, b: number): number;
export function cameraconstraintsbuilder_AspectRatioExact(a: number, b: number): number;
export function cameraconstraintsbuilder_FacingMode(a: number, b: number): number;
export function cameraconstraintsbuilder_FacingModeExact(a: number, b: number): number;
export function cameraconstraintsbuilder_MinFrameRate(a: number, b: number): number;
export function cameraconstraintsbuilder_FrameRate(a: number, b: number): number;
export function cameraconstraintsbuilder_MaxFrameRate(a: number, b: number): number;
export function cameraconstraintsbuilder_FrameRateExact(a: number, b: number): number;
export function cameraconstraintsbuilder_ResizeMode(a: number, b: number): number;
export function cameraconstraintsbuilder_ResizeModeExact(a: number, b: number): number;
export function cameraconstraintsbuilder_DeviceId(a: number, b: number, c: number): number;
export function cameraconstraintsbuilder_DeviceIdExact(a: number, b: number): number;
export function cameraconstraintsbuilder_GroupId(a: number, b: number, c: number): number;
export function cameraconstraintsbuilder_GroupIdExact(a: number, b: number): number;
export function cameraconstraintsbuilder_buildCameraConstraints(a: number): number;
export function __wbg_cameraconstraints_free(a: number): void;
export function cameraconstraints_media_constraints(a: number): number;
export function cameraconstraints_min_resolution(a: number): number;
export function cameraconstraints_set_min_resolution(a: number, b: number): void;
export function cameraconstraints_resolution(a: number): number;
export function cameraconstraints_set_resolution(a: number, b: number): void;
export function cameraconstraints_max_resolution(a: number): number;
export function cameraconstraints_set_max_resolution(a: number, b: number): void;
export function cameraconstraints_resolution_exact(a: number): number;
export function cameraconstraints_set_resolution_exact(a: number, b: number): void;
export function cameraconstraints_min_aspect_ratio(a: number, b: number): void;
export function cameraconstraints_set_min_aspect_ratio(a: number, b: number): void;
export function cameraconstraints_aspect_ratio(a: number): number;
export function cameraconstraints_set_aspect_ratio(a: number, b: number): void;
export function cameraconstraints_max_aspect_ratio(a: number, b: number): void;
export function cameraconstraints_set_max_aspect_ratio(a: number, b: number): void;
export function cameraconstraints_aspect_ratio_exact(a: number): number;
export function cameraconstraints_set_aspect_ratio_exact(a: number, b: number): void;
export function cameraconstraints_facing_mode(a: number): number;
export function cameraconstraints_set_facing_mode(a: number, b: number): void;
export function cameraconstraints_facing_mode_exact(a: number): number;
export function cameraconstraints_set_facing_mode_exact(a: number, b: number): void;
export function cameraconstraints_min_frame_rate(a: number, b: number): void;
export function cameraconstraints_set_min_frame_rate(a: number, b: number): void;
export function cameraconstraints_frame_rate(a: number): number;
export function cameraconstraints_set_frame_rate(a: number, b: number): void;
export function cameraconstraints_max_frame_rate(a: number, b: number): void;
export function cameraconstraints_set_max_frame_rate(a: number, b: number): void;
export function cameraconstraints_frame_rate_exact(a: number): number;
export function cameraconstraints_set_frame_rate_exact(a: number, b: number): void;
export function cameraconstraints_resize_mode(a: number): number;
export function cameraconstraints_set_resize_mode(a: number, b: number): void;
export function cameraconstraints_resize_mode_exact(a: number): number;
export function cameraconstraints_set_resize_mode_exact(a: number, b: number): void;
export function cameraconstraints_device_id(a: number, b: number): void;
export function cameraconstraints_set_device_id(a: number, b: number, c: number): void;
export function cameraconstraints_device_id_exact(a: number): number;
export function cameraconstraints_set_device_id_exact(a: number, b: number): void;
export function cameraconstraints_group_id(a: number, b: number): void;
export function cameraconstraints_set_group_id(a: number, b: number, c: number): void;
export function cameraconstraints_group_id_exact(a: number): number;
export function cameraconstraints_set_group_id_exact(a: number, b: number): void;
export function cameraconstraints_applyConstraints(a: number): void;
export function __wbg_nokhwacamera_free(a: number): void;
export function nokhwacamera_js_new(a: number): number;
export function nokhwacamera_constraints(a: number): number;
export function nokhwacamera_js_set_constraints(a: number, b: number): void;
export function nokhwacamera_resolution(a: number): number;
export function nokhwacamera_measureResolution(a: number): void;
export function nokhwacamera_applyConstraints(a: number): void;
export function nokhwacamera_media_stream(a: number): number;
export function nokhwacamera_captureImageData(a: number): number;
export function nokhwacamera_captureImageURI(a: number, b: number, c: number, d: number, e: number): void;
export function nokhwacamera_captureFrameRawData(a: number, b: number): void;
export function nokhwacamera_copyToCanvas(a: number, b: number, c: number, d: number): void;
export function nokhwacamera_attachToElement(a: number, b: number, c: number, d: number): void;
export function nokhwacamera_detachCamera(a: number): void;
export function nokhwacamera_stopAll(a: number): void;
export function cameraconstraintsbuilder_MinResolution(a: number, b: number): number;
export function __wbg_jsresolution_free(a: number): void;
export function __wbg_get_jsresolution_width_x(a: number): number;
export function __wbg_set_jsresolution_width_x(a: number, b: number): void;
export function __wbg_get_jsresolution_height_y(a: number): number;
export function __wbg_set_jsresolution_height_y(a: number, b: number): void;
export function jsresolution_width(a: number): number;
export function jsresolution_height(a: number): number;
export function __wbg_jscamerainfo_free(a: number): void;
export function jscamerainfo_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function jscamerainfo_human_name(a: number, b: number): void;
export function jscamerainfo_set_human_name(a: number, b: number, c: number): void;
export function jscamerainfo_description(a: number, b: number): void;
export function jscamerainfo_set_description(a: number, b: number, c: number): void;
export function jscamerainfo_misc(a: number, b: number): void;
export function jscamerainfo_set_misc(a: number, b: number, c: number): void;
export function jscamerainfo_index(a: number): number;
export function jscamerainfo_set_index(a: number, b: number): void;
export function jsresolution_new(a: number, b: number): number;
export function jsresolution_x(a: number): number;
export function jsresolution_y(a: number): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h4e37a62ffa13b731(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h4d59381e7733ca36(a: number, b: number, c: number, d: number): void;
